{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"\u6b22\u8fce\u4f7f\u7528 coords-nsga2","text":"<p>\u8fd9\u662f\u4e00\u4e2a\u57fa\u4e8e Python \u5b9e\u73b0\u7684\u9488\u5bf9\u5750\u6807\u7ec4\u5408\u7684\u591a\u76ee\u6807\u4f18\u5316\u7b97\u6cd5\u5e93\uff0c\u57fa\u4e8e NSGA-II \u65b9\u6cd5\u6539\u8fdb\u3002</p>"},{"location":"#_1","title":"\u5feb\u901f\u5f00\u59cb","text":"<ul> <li>\u5b89\u88c5\uff1a\u8bf7\u53c2\u9605 \u5b89\u88c5\u6307\u5357</li> <li>\u4f7f\u7528\uff1a\u8be6\u7ec6\u6559\u7a0b\u8bf7\u53c2\u9605 \u4f7f\u7528\u6307\u5357</li> </ul>"},{"location":"install/","title":"\u5b89\u88c5","text":"<p>To install from PyPI: <pre><code>pip install coord-nsga2\n</code></pre></p> <p>Or install the latest development version from GitHub: <pre><code>git clone https://github.com/YourUsername/coord-nsga2.git\ncd coord-nsga2\npip install -e .\n</code></pre></p>"},{"location":"usage/","title":"\u4f7f\u7528","text":"<p>Below is a minimal example demonstrating how to run a coordinate-based NSGA-II optimization using this library:</p> <pre><code>import numpy as np\nfrom scipy.spatial import distance\n\nfrom coords_nsga2 import CoordsNSGA2, Problem\nfrom coords_nsga2.spatial import region_from_points\n\n# Define the optimization regions\nregion = region_from_points([\n    [0, 0],\n    [1, 0],\n    [2, 1],\n    [1, 1],\n])\n\n# Define your objective functions\ndef objective_1(coords):\n    # coords is a array of (x, y) points\n    return np.sum(coords[:, 0]) + np.sum(coords[:, 1])\n\ndef objective_2(coords):\n    return np.std(coords[:, 0]) + np.std(coords[:, 1])\n\n# Define constraints if needed\nspacing = 0.05  # spacing constraint\ndef constraint_1(coords):\n    # Return total penalty\n    dist_list = distance.pdist(coords)\n    penalty_list = spacing-dist_list[dist_list &lt; spacing]\n    penalty_sum = np.sum(penalty_list)\n    return penalty_sum\n\n# Setup the problem\nproblem = Problem(func1=objective_1,\n                  func2=objective_2,\n                  n_points=10,\n                  region=region,\n                  constraints=[constraint_1])\n\n# Initialize the optimizer\noptimizer = CoordsNSGA2(problem=problem,\n                        pop_size=20,\n                        prob_crs=0.5,\n                        prob_mut=0.1)\n\n# Run optimization\nresult = optimizer.run(1000)\n\n# Optimization results\nprint(result)\n</code></pre>"}]}